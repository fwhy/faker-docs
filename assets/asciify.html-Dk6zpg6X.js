import{_ as s,c as n,a as t,o as e}from"./app-Du1u7NE4.js";const p={};function o(c,a){return e(),n("div",null,a[0]||(a[0]=[t(`<h1 id="asciify" tabindex="-1"><a class="header-anchor" href="#asciify"><span>asciify</span></a></h1><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token function">asciify</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;****&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">:</span><span class="token keyword return-type">string</span></span>
<span class="line"></span></code></pre></div><p>🇯🇵 🇺🇸<br> 渡された文字列のアスタリスクをランダムなASCII文字に置き換えた文字列を生成します。</p><h2 id="パラメータ" tabindex="-1"><a class="header-anchor" href="#パラメータ"><span>パラメータ</span></a></h2><h3 id="string" tabindex="-1"><a class="header-anchor" href="#string"><span><code>$string</code></span></a></h3><p>フォーマットを指定します。<br> 疑問符(&#39;*&#39;)はASCII文字に置き換えられます。</p><h2 id="例" tabindex="-1"><a class="header-anchor" href="#例"><span>例</span></a></h2><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ja_JP&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">asciify</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;G&#39;|m&quot;</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">asciify</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Password is ******&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Password is p3};L=&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意:</p><p>置き換える文字は特殊文字を除いた、ASCIIコード33から126までの文字です。</p><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">33</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;=</span> <span class="token number">126</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">echo</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">!</span>&quot;<span class="token comment">#$%&amp;&#39;()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~</span></span>
<span class="line"></span></code></pre></div></div>`,10)]))}const r=s(p,[["render",o]]),l=JSON.parse(`{"path":"/formatters/base/asciify.html","title":"asciify","lang":"ja","frontmatter":{"description":"asciify 🇯🇵 🇺🇸 渡された文字列のアスタリスクをランダムなASCII文字に置き換えた文字列を生成します。 パラメータ $string フォーマットを指定します。 疑問符('*')はASCII文字に置き換えられます。 例 注意 注意: 置き換える文字は特殊文字を除いた、ASCIIコード33から126までの文字です。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"asciify\\",\\"image\\":[\\"/faker-docs/images/logo310.png\\"],\\"dateModified\\":\\"2021-10-05T04:56:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Fullwidth Hyphen\\",\\"url\\":\\"https://blare.fwhy.app/about/\\"}]}"],["meta",{"property":"og:url","content":"https://fwhy.github.io/faker-docs/formatters/base/asciify.html"}],["meta",{"property":"og:site_name","content":"FakerPHP非公式リファレンス"}],["meta",{"property":"og:title","content":"asciify"}],["meta",{"property":"og:description","content":"asciify 🇯🇵 🇺🇸 渡された文字列のアスタリスクをランダムなASCII文字に置き換えた文字列を生成します。 パラメータ $string フォーマットを指定します。 疑問符('*')はASCII文字に置き換えられます。 例 注意 注意: 置き換える文字は特殊文字を除いた、ASCIIコード33から126までの文字です。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/faker-docs/images/logo310.png"}],["meta",{"property":"og:locale","content":"ja"}],["meta",{"property":"og:updated_time","content":"2021-10-05T04:56:51.000Z"}],["meta",{"property":"article:modified_time","content":"2021-10-05T04:56:51.000Z"}],["link",{"rel":"canonical","href":"/faker-docs/formatters/base/asciify.html"}]]},"git":{"updatedTime":1633409811000,"contributors":[{"name":"fwhy","username":"fwhy","email":"prog@fullwidth-hyphen.tech","commits":2,"url":"https://github.com/fwhy"}],"changelog":[{"hash":"8cb38ec38e266000b0eeca25b7eaf5d9e24e14b6","time":1633409811000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add version"},{"hash":"832b951097bef75402be1730ada129ae17dd2c66","time":1604157914000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add some"}]},"filePathRelative":"formatters/base/asciify.md","autoDesc":true}`);export{r as comp,l as data};
