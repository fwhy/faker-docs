import{_ as a,c as s,a as t,o as e}from"./app-Du1u7NE4.js";const p={};function o(c,n){return e(),s("div",null,n[0]||(n[0]=[t(`<h1 id="randomelements" tabindex="-1"><a class="header-anchor" href="#randomelements"><span>randomElements</span></a></h1><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token function">randomElements</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token operator">|</span><span class="token keyword type-declaration">string</span><span class="token operator">|</span><span class="token class-name">Traversable</span> <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token operator">?</span><span class="token keyword type-hint">int</span> <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword type-hint">bool</span> <span class="token variable">$allowDuplicates</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">:</span><span class="token keyword return-type">array</span></span>
<span class="line"></span></code></pre></div><p>🇯🇵 🇺🇸<br><code>$array</code>の中からランダムに<code>$count</code>個だけ抽出し、配列にして返します。</p><h2 id="パラメータ" tabindex="-1"><a class="header-anchor" href="#パラメータ"><span>パラメータ</span></a></h2><h3 id="array" tabindex="-1"><a class="header-anchor" href="#array"><span><code>$array</code></span></a></h3><p>要素を取得する配列、または列挙型のクラス名。デフォルトは<code>[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</code>。</p><h3 id="count" tabindex="-1"><a class="header-anchor" href="#count"><span><code>$count</code></span></a></h3><p>取得する要素の数。デフォルトは1。nullを指定した場合はランダムな個数を取得します。</p><h3 id="allowduplicates" tabindex="-1"><a class="header-anchor" href="#allowduplicates"><span><code>$allowDuplicates</code></span></a></h3><p>要素を重複取得してよいか？デフォルトはfalse。</p><h2 id="例外" tabindex="-1"><a class="header-anchor" href="#例外"><span>例外</span></a></h2><p><code>$allowDupplicates</code>をfalseにした場合、<code>$array</code>の要素数が<code>$count</code>より少ないときに<code>LengthException</code>が発生します。</p><h2 id="例" tabindex="-1"><a class="header-anchor" href="#例"><span>例</span></a></h2><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ja_JP&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">randomElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;b&quot;</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">randomElements</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">     <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">randomElements</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;X&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Y&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Z&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">     <span class="token string single-quoted-string">&#39;X&#39;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string single-quoted-string">&#39;Z&#39;</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">randomElements</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;B&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;B&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;A&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;B&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;B&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;A&quot;</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token punctuation">]</span></span>
<span class="line"></span></code></pre></div>`,14)]))}const r=a(p,[["render",o]]),i=JSON.parse(`{"path":"/formatters/base/random_elements.html","title":"randomElements","lang":"ja","frontmatter":{"description":"randomElements 🇯🇵 🇺🇸 $arrayの中からランダムに$count個だけ抽出し、配列にして返します。 パラメータ $array 要素を取得する配列、または列挙型のクラス名。デフォルトは['a', 'b', 'c']。 $count 取得する要素の数。デフォルトは1。nullを指定した場合はランダムな個数を取得します。 $all...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"randomElements\\",\\"image\\":[\\"/faker-docs/images/logo310.png\\"],\\"dateModified\\":\\"2023-10-30T11:39:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Fullwidth Hyphen\\",\\"url\\":\\"https://blare.fwhy.app/about/\\"}]}"],["meta",{"property":"og:url","content":"https://fwhy.github.io/faker-docs/formatters/base/random_elements.html"}],["meta",{"property":"og:site_name","content":"FakerPHP非公式リファレンス"}],["meta",{"property":"og:title","content":"randomElements"}],["meta",{"property":"og:description","content":"randomElements 🇯🇵 🇺🇸 $arrayの中からランダムに$count個だけ抽出し、配列にして返します。 パラメータ $array 要素を取得する配列、または列挙型のクラス名。デフォルトは['a', 'b', 'c']。 $count 取得する要素の数。デフォルトは1。nullを指定した場合はランダムな個数を取得します。 $all..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/faker-docs/images/logo310.png"}],["meta",{"property":"og:locale","content":"ja"}],["meta",{"property":"og:updated_time","content":"2023-10-30T11:39:57.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-30T11:39:57.000Z"}],["link",{"rel":"canonical","href":"/faker-docs/formatters/base/random_elements.html"}]]},"git":{"updatedTime":1698665997000,"contributors":[{"name":"fwhy","username":"fwhy","email":"prog@fullwidth-hyphen.tech","commits":4,"url":"https://github.com/fwhy"}],"changelog":[{"hash":"8651729ef646afbec0d42b687dfd304f569a0188","time":1698665997000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"v1.23.0"},{"hash":"6e4791e0e8f6b2b173f2dffbe5e4cfe3563abb6e","time":1685817984000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"v1.22.0"},{"hash":"8cb38ec38e266000b0eeca25b7eaf5d9e24e14b6","time":1633409811000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add version"},{"hash":"91bcb65a436e79e9d7e0a7bd55d5e0f247f75234","time":1603212112000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add some"}]},"filePathRelative":"formatters/base/random_elements.md","autoDesc":true}`);export{r as comp,i as data};
