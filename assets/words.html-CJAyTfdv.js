import{_ as a,c as n,a as t,o as e}from"./app-Du1u7NE4.js";const p={};function o(c,s){return e(),n("div",null,s[0]||(s[0]=[t(`<h1 id="words" tabindex="-1"><a class="header-anchor" href="#words"><span>words</span></a></h1><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token function">words</span><span class="token punctuation">(</span><span class="token keyword type-hint">int</span> <span class="token variable">$nb</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword type-hint">bool</span> <span class="token variable">$asText</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">:</span><span class="token keyword return-type">array</span><span class="token operator">|</span><span class="token keyword type-declaration">string</span></span>
<span class="line"></span></code></pre></div><p>🇯🇵 🇺🇸<br> ランダムな単語を<code>$nb</code>個生成します。</p><h2 id="パラメータ" tabindex="-1"><a class="header-anchor" href="#パラメータ"><span>パラメータ</span></a></h2><h3 id="nb" tabindex="-1"><a class="header-anchor" href="#nb"><span><code>$nb</code></span></a></h3><p>単語の数。デフォルトは3。</p><h3 id="astext" tabindex="-1"><a class="header-anchor" href="#astext"><span><code>$asText</code></span></a></h3><p>trueの場合、文字列として返します。デフォルトはfalseで、この場合は配列で返します。</p><h2 id="例" tabindex="-1"><a class="header-anchor" href="#例"><span>例</span></a></h2><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ja_JP&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">words</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;molestias&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;doloribus&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;iste&quot;</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">words</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;modi&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;laboriosam&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;voluptates&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;nemo&quot;</span><span class="token punctuation">,</span></span>
<span class="line">     <span class="token string double-quoted-string">&quot;harum&quot;</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">words</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;necessitatibus blanditiis&quot;</span></span>
<span class="line"></span></code></pre></div>`,10)]))}const r=a(p,[["render",o]]),i=JSON.parse('{"path":"/formatters/lorem/words.html","title":"words","lang":"ja","frontmatter":{"description":"words 🇯🇵 🇺🇸 ランダムな単語を$nb個生成します。 パラメータ $nb 単語の数。デフォルトは3。 $asText trueの場合、文字列として返します。デフォルトはfalseで、この場合は配列で返します。 例","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"words\\",\\"image\\":[\\"/faker-docs/images/logo310.png\\"],\\"dateModified\\":\\"2021-10-05T04:56:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Fullwidth Hyphen\\",\\"url\\":\\"https://blare.fwhy.app/about/\\"}]}"],["meta",{"property":"og:url","content":"https://fwhy.github.io/faker-docs/formatters/lorem/words.html"}],["meta",{"property":"og:site_name","content":"FakerPHP非公式リファレンス"}],["meta",{"property":"og:title","content":"words"}],["meta",{"property":"og:description","content":"words 🇯🇵 🇺🇸 ランダムな単語を$nb個生成します。 パラメータ $nb 単語の数。デフォルトは3。 $asText trueの場合、文字列として返します。デフォルトはfalseで、この場合は配列で返します。 例"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/faker-docs/images/logo310.png"}],["meta",{"property":"og:locale","content":"ja"}],["meta",{"property":"og:updated_time","content":"2021-10-05T04:56:51.000Z"}],["meta",{"property":"article:modified_time","content":"2021-10-05T04:56:51.000Z"}],["link",{"rel":"canonical","href":"/faker-docs/formatters/lorem/words.html"}]]},"git":{"updatedTime":1633409811000,"contributors":[{"name":"fwhy","username":"fwhy","email":"prog@fullwidth-hyphen.tech","commits":2,"url":"https://github.com/fwhy"}],"changelog":[{"hash":"8cb38ec38e266000b0eeca25b7eaf5d9e24e14b6","time":1633409811000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add version"},{"hash":"31d5bef2ede27fc4f13f0ff6dc080829cc60ddce","time":1603290734000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add some"}]},"filePathRelative":"formatters/lorem/words.md","autoDesc":true}');export{r as comp,i as data};
