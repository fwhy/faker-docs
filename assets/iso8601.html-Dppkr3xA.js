import{_ as s,c as t,a as e,o as n}from"./app-Du1u7NE4.js";const o={};function p(r,a){return n(),t("div",null,a[0]||(a[0]=[e(`<h1 id="iso8601" tabindex="-1"><a class="header-anchor" href="#iso8601"><span>iso8601</span></a></h1><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token function">iso8601</span><span class="token punctuation">(</span><span class="token class-name">DateTime</span><span class="token operator">|</span><span class="token keyword type-declaration">int</span><span class="token operator">|</span><span class="token keyword type-declaration">string</span> <span class="token variable">$max</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;now&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">:</span><span class="token keyword return-type">string</span></span>
<span class="line"></span></code></pre></div><p>🇯🇵 🇺🇸<br> ISO8601でフォーマットされた日時文字列を生成します。</p><h2 id="パラメータ" tabindex="-1"><a class="header-anchor" href="#パラメータ"><span>パラメータ</span></a></h2><h3 id="max" tabindex="-1"><a class="header-anchor" href="#max"><span><code>$max</code></span></a></h3><p>返す値の最大値を指定します。<br> 日時型を渡した場合、その日時のUNIXタイムスタンプとなります。<br> 文字列を渡す場合、<code>strtotime()</code>で解釈可能なものを渡します。</p><h2 id="例" tabindex="-1"><a class="header-anchor" href="#例"><span>例</span></a></h2><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ja_JP&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">iso8601</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;2001-09-23T13:48:11+0000&quot;</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">iso8601</span><span class="token punctuation">(</span><span class="token number">1600000000</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;1972-12-19T17:13:34+0000&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ul><li><a href="https://www.php.net/manual/ja/function.strtotime.php" target="_blank" rel="noopener noreferrer">strtotime</a></li><li><a href="https://www.php.net/manual/ja/function.date-default-timezone-get" target="_blank" rel="noopener noreferrer">date_default_timezone_get</a></li></ul>`,10)]))}const i=s(o,[["render",p]]),l=JSON.parse('{"path":"/formatters/date_time/iso8601.html","title":"iso8601","lang":"ja","frontmatter":{"description":"iso8601 🇯🇵 🇺🇸 ISO8601でフォーマットされた日時文字列を生成します。 パラメータ $max 返す値の最大値を指定します。 日時型を渡した場合、その日時のUNIXタイムスタンプとなります。 文字列を渡す場合、strtotime()で解釈可能なものを渡します。 例 参考 strtotime date_default_timezon...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"iso8601\\",\\"image\\":[\\"/faker-docs/images/logo310.png\\"],\\"dateModified\\":\\"2021-10-05T04:56:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Fullwidth Hyphen\\",\\"url\\":\\"https://blare.fwhy.app/about/\\"}]}"],["meta",{"property":"og:url","content":"https://fwhy.github.io/faker-docs/formatters/date_time/iso8601.html"}],["meta",{"property":"og:site_name","content":"FakerPHP非公式リファレンス"}],["meta",{"property":"og:title","content":"iso8601"}],["meta",{"property":"og:description","content":"iso8601 🇯🇵 🇺🇸 ISO8601でフォーマットされた日時文字列を生成します。 パラメータ $max 返す値の最大値を指定します。 日時型を渡した場合、その日時のUNIXタイムスタンプとなります。 文字列を渡す場合、strtotime()で解釈可能なものを渡します。 例 参考 strtotime date_default_timezon..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/faker-docs/images/logo310.png"}],["meta",{"property":"og:locale","content":"ja"}],["meta",{"property":"og:updated_time","content":"2021-10-05T04:56:51.000Z"}],["meta",{"property":"article:modified_time","content":"2021-10-05T04:56:51.000Z"}],["link",{"rel":"canonical","href":"/faker-docs/formatters/date_time/iso8601.html"}]]},"git":{"updatedTime":1633409811000,"contributors":[{"name":"fwhy","username":"fwhy","email":"prog@fullwidth-hyphen.tech","commits":3,"url":"https://github.com/fwhy"}],"changelog":[{"hash":"8cb38ec38e266000b0eeca25b7eaf5d9e24e14b6","time":1633409811000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add version"},{"hash":"8cd3dffc61b1668750f79a8cd174b674441160ec","time":1606796397000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add some"},{"hash":"3b69363d5de0998627ec40069572f5eb6188c8d1","time":1604068542000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add some"}]},"filePathRelative":"formatters/date_time/iso8601.md","autoDesc":true}');export{i as comp,l as data};
