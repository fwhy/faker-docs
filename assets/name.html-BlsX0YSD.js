import{_ as n,c as s,a as e,o as t}from"./app-Du1u7NE4.js";const p={};function o(c,a){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h1><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token function">name</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token keyword type-hint">string</span> <span class="token variable">$gender</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">:</span><span class="token keyword return-type">string</span></span>
<span class="line"></span></code></pre></div><p>🇯🇵 🇺🇸<br> 氏名を生成します。</p><h2 id="パラメータ" tabindex="-1"><a class="header-anchor" href="#パラメータ"><span>パラメータ</span></a></h2><h3 id="gender" tabindex="-1"><a class="header-anchor" href="#gender"><span><code>$gender</code></span></a></h3><p>&#39;male&#39;を指定した場合は男性名を、&#39;female&#39;を指定した場合は女性名を返します。</p><h2 id="例" tabindex="-1"><a class="header-anchor" href="#例"><span>例</span></a></h2><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ja_JP&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;吉本 舞&quot;</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ja_JP&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;male&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;吉田 和也&quot;</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Maryse Larson&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意:</p><p>言語をデフォルト、つまり&#39;en_US&#39;ロケールを指定した場合は接頭辞(Mr.などの敬称)や接尾辞(Jr.などの称号)が付く場合があります。</p></div>`,10)]))}const l=n(p,[["render",o]]),i=JSON.parse(`{"path":"/formatters/person/name.html","title":"name","lang":"ja","frontmatter":{"description":"name 🇯🇵 🇺🇸 氏名を生成します。 パラメータ $gender 'male'を指定した場合は男性名を、'female'を指定した場合は女性名を返します。 例 注意 注意: 言語をデフォルト、つまり'en_US'ロケールを指定した場合は接頭辞(Mr.などの敬称)や接尾辞(Jr.などの称号)が付く場合があります。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"name\\",\\"image\\":[\\"/faker-docs/images/logo310.png\\"],\\"dateModified\\":\\"2021-10-05T04:56:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Fullwidth Hyphen\\",\\"url\\":\\"https://blare.fwhy.app/about/\\"}]}"],["meta",{"property":"og:url","content":"https://fwhy.github.io/faker-docs/formatters/person/name.html"}],["meta",{"property":"og:site_name","content":"FakerPHP非公式リファレンス"}],["meta",{"property":"og:title","content":"name"}],["meta",{"property":"og:description","content":"name 🇯🇵 🇺🇸 氏名を生成します。 パラメータ $gender 'male'を指定した場合は男性名を、'female'を指定した場合は女性名を返します。 例 注意 注意: 言語をデフォルト、つまり'en_US'ロケールを指定した場合は接頭辞(Mr.などの敬称)や接尾辞(Jr.などの称号)が付く場合があります。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/faker-docs/images/logo310.png"}],["meta",{"property":"og:locale","content":"ja"}],["meta",{"property":"og:updated_time","content":"2021-10-05T04:56:51.000Z"}],["meta",{"property":"article:modified_time","content":"2021-10-05T04:56:51.000Z"}],["link",{"rel":"canonical","href":"/faker-docs/formatters/person/name.html"}]]},"git":{"updatedTime":1633409811000,"contributors":[{"name":"fwhy","username":"fwhy","email":"prog@fullwidth-hyphen.tech","commits":5,"url":"https://github.com/fwhy"}],"changelog":[{"hash":"8cb38ec38e266000b0eeca25b7eaf5d9e24e14b6","time":1633409811000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add version"},{"hash":"91bcb65a436e79e9d7e0a7bd55d5e0f247f75234","time":1603212112000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add some"},{"hash":"fb60995cbb9e5474325391452bc2007db1acfc58","time":1603002489000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add some"},{"hash":"cfc55bed9100c8099ca31341b7e7ef4f4d527e60","time":1602848309000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"added some"},{"hash":"c3d9185a982e2250a248306bc867e88df2611e14","time":1602770167000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"init"}]},"filePathRelative":"formatters/person/name.md","autoDesc":true}`);export{l as comp,i as data};
