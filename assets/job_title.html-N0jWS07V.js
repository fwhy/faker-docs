import{_ as n,c as s,a as o,b as t,d as p,w as c,r,o as l,e as i}from"./app-Du1u7NE4.js";const d={};function h(u,a){const e=r("RouteLink");return l(),s("div",null,[a[1]||(a[1]=o(`<h1 id="jobtitle" tabindex="-1"><a class="header-anchor" href="#jobtitle"><span>jobTitle</span></a></h1><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token function">jobTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span><span class="token keyword return-type">string</span></span>
<span class="line"></span></code></pre></div><p>🇯🇵 🇺🇸<br> 職名を返します。</p><h2 id="パラメータ" tabindex="-1"><a class="header-anchor" href="#パラメータ"><span>パラメータ</span></a></h2><p>なし</p><h2 id="例" tabindex="-1"><a class="header-anchor" href="#例"><span>例</span></a></h2><div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ja_JP&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">jobTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;alias&quot;</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name class-name-fully-qualified static-context">Faker<span class="token punctuation">\\</span>Factory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">jobTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Numerical Tool Programmer OR Process Control Programmer&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意:</p><p>日本語ロケールでは<code>word()</code>により生成されるランダムな単語が返されるだけです。</p></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,10)),t("ul",null,[t("li",null,[p(e,{to:"/formatters/lorem/word.html"},{default:c(()=>a[0]||(a[0]=[i("word")])),_:1,__:[0]})])])])}const g=n(d,[["render",h]]),f=JSON.parse('{"path":"/formatters/company/job_title.html","title":"jobTitle","lang":"ja","frontmatter":{"description":"jobTitle 🇯🇵 🇺🇸 職名を返します。 パラメータ なし 例 注意 注意: 日本語ロケールではword()により生成されるランダムな単語が返されるだけです。 参考","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jobTitle\\",\\"image\\":[\\"/faker-docs/images/logo310.png\\"],\\"dateModified\\":\\"2023-11-22T11:07:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Fullwidth Hyphen\\",\\"url\\":\\"https://blare.fwhy.app/about/\\"}]}"],["meta",{"property":"og:url","content":"https://fwhy.github.io/faker-docs/formatters/company/job_title.html"}],["meta",{"property":"og:site_name","content":"FakerPHP非公式リファレンス"}],["meta",{"property":"og:title","content":"jobTitle"}],["meta",{"property":"og:description","content":"jobTitle 🇯🇵 🇺🇸 職名を返します。 パラメータ なし 例 注意 注意: 日本語ロケールではword()により生成されるランダムな単語が返されるだけです。 参考"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/faker-docs/images/logo310.png"}],["meta",{"property":"og:locale","content":"ja"}],["meta",{"property":"og:updated_time","content":"2023-11-22T11:07:49.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-22T11:07:49.000Z"}],["link",{"rel":"canonical","href":"/faker-docs/formatters/company/job_title.html"}]]},"git":{"updatedTime":1700651269000,"contributors":[{"name":"fwhy","username":"fwhy","email":"prog@fullwidth-hyphen.tech","commits":3,"url":"https://github.com/fwhy"}],"changelog":[{"hash":"c9997c8b8abc2752a01d5d381fd325317be8de9a","time":1700651269000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add ext"},{"hash":"8cb38ec38e266000b0eeca25b7eaf5d9e24e14b6","time":1633409811000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add version"},{"hash":"31d5bef2ede27fc4f13f0ff6dc080829cc60ddce","time":1603290734000,"email":"prog@fullwidth-hyphen.tech","author":"fwhy","message":"add some"}]},"filePathRelative":"formatters/company/job_title.md","autoDesc":true}');export{g as comp,f as data};
